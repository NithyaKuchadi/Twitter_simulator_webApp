{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { dispatchEvent, Keys, classNames, Draggable, getTabIndex } from '@progress/kendo-react-common';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages, sliderIncreaseValue, sliderDecreaseValue, sliderDragTitle } from './../messages';\nimport { SLIDER_LABEL_ATTRIBUTE } from './SliderLabel';\n/**\n * Represents the [KendoReact Slider component]({% slug overview_slider%}).\n */\n\nvar Slider =\n/** @class */\nfunction (_super) {\n  __extends(Slider, _super);\n\n  function Slider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * @hidden\n     */\n\n\n    _this.state = {\n      value: _this.props.defaultValue === undefined ? _this.props.min : _this.props.defaultValue,\n      focused: false\n    };\n    /**\n     * @hidden\n     */\n\n    _this.buttons = function (props) {\n      if (!props.enabled) {\n        return props.children;\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"a\", {\n        className: \"k-button k-button-decrease\",\n        style: {\n          position: 'relative'\n        },\n        title: props.decrementTitle,\n        onClick: props.decrement\n      }, React.createElement(\"span\", {\n        className: classNames('k-icon', {\n          'k-i-arrow-s': _this.props.vertical,\n          'k-i-arrow-w': !_this.props.vertical\n        })\n      })), props.children, React.createElement(\"a\", {\n        className: \"k-button k-button-increase\",\n        style: {\n          position: 'relative'\n        },\n        title: props.incrementTitle,\n        onClick: props.increment\n      }, React.createElement(\"span\", {\n        className: classNames('k-icon', {\n          'k-i-arrow-n': _this.props.vertical,\n          'k-i-arrow-e': !_this.props.vertical\n        })\n      })));\n    };\n\n    _this.isLabel = function (target) {\n      var currentTarget = target;\n\n      while (currentTarget) {\n        if (Boolean(currentTarget.getAttribute(SLIDER_LABEL_ATTRIBUTE))) {\n          return true;\n        }\n\n        currentTarget = currentTarget.parentElement;\n      }\n\n      return false;\n    };\n\n    _this.onFocus = function () {\n      _this.setState({\n        focused: true\n      });\n    };\n\n    _this.onBlur = function () {\n      _this.setState({\n        focused: false\n      });\n    };\n\n    _this.onKeyDown = function (e) {\n      var newValue = undefined;\n\n      if (e.keyCode === Keys.left || e.keyCode === Keys.down) {\n        newValue = _this.state.value - (_this.props.step || 0);\n      } else if (e.keyCode === Keys.right || e.keyCode === Keys.up) {\n        newValue = _this.state.value + (_this.props.step || 0);\n      } else if (e.keyCode === Keys.home) {\n        newValue = _this.props.min;\n      } else if (e.keyCode === Keys.end) {\n        newValue = _this.props.max;\n      }\n\n      if (newValue !== undefined) {\n        e.preventDefault();\n\n        _this.change(e, newValue);\n      }\n    };\n\n    _this.decrement = function (e) {\n      e.preventDefault();\n\n      _this.change(e, _this.state.value - (_this.props.step || 0));\n    };\n\n    _this.increment = function (e) {\n      e.preventDefault();\n\n      _this.change(e, _this.state.value + (_this.props.step || 0));\n    };\n\n    _this.dragStart = function (e) {\n      if (!_this.isLabel(e.event.originalEvent.target)) {\n        if (e.event.isTouch) {\n          e.event.originalEvent.preventDefault();\n        }\n\n        _this.drag(e);\n      }\n    };\n\n    _this.dragOver = function (e) {\n      e.event.originalEvent.preventDefault();\n\n      _this.drag(e);\n    };\n\n    _this.drag = function (e) {\n      var computed = e.element.getBoundingClientRect();\n      var distance = _this.props.vertical ? computed.bottom - e.event.clientY : e.event.clientX - computed.left;\n      var size = _this.props.vertical ? computed.height : computed.width;\n      var percentage = distance / size;\n\n      _this.change(e, _this.props.min + percentage * (_this.props.max - _this.props.min));\n    };\n\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  Slider.getDerivedStateFromProps = function (props, state) {\n    var value = props.value !== undefined ? props.value : state.value;\n    var min = props.min,\n        max = props.max;\n    return value === undefined ? null : {\n      value: Math.min(Math.max(value, min), max)\n    };\n  };\n  /**\n   * @hidden\n   */\n\n\n  Slider.prototype.render = function () {\n    var _this = this;\n\n    var lS = provideLocalizationService(this);\n    var percentValue = (this.state.value - this.props.min) / (this.props.max - this.props.min) * 100;\n    var trackStyles = this.props.vertical ? {\n      marginTop: '0.5rem',\n      marginBottom: '0.5rem'\n    } : {\n      marginLeft: '0.5rem',\n      marginRight: '0.5rem'\n    };\n    var sliderItemsStyle = this.props.vertical ? {\n      paddingTop: 0,\n      height: '100%'\n    } : {};\n    return React.createElement(\"div\", {\n      \"aria-valuemin\": this.props.min,\n      \"aria-valuemax\": this.props.max,\n      \"aria-valuenow\": this.state.value,\n      \"aria-disabled\": this.props.disabled ? 'true' : undefined,\n      role: \"slider\",\n      style: this.props.style,\n      tabIndex: getTabIndex(this.props.tabIndex, this.props.disabled, undefined),\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onKeyDown: this.onKeyDown,\n      className: classNames('k-slider k-widget k-state-default', this.props.className, {\n        'k-state-focused': this.state.focused,\n        'k-state-disabled': this.props.disabled,\n        'k-slider-horizontal': !this.props.vertical,\n        'k-slider-vertical': this.props.vertical\n      }),\n      ref: function (el) {\n        return _this._element = el;\n      }\n    }, React.createElement(\"div\", {\n      className: classNames('k-slider-wrap', {\n        'k-slider-buttons': this.props.buttons\n      }),\n      style: {\n        display: 'flex',\n        position: 'relative',\n        flexDirection: this.props.vertical ? 'column-reverse' : 'row'\n      }\n    }, React.createElement(this.buttons, {\n      enabled: this.props.buttons,\n      decrement: this.decrement,\n      increment: this.increment,\n      incrementTitle: lS.toLanguageString(sliderIncreaseValue, messages[sliderIncreaseValue]),\n      decrementTitle: lS.toLanguageString(sliderDecreaseValue, messages[sliderDecreaseValue])\n    }, React.createElement(Draggable, {\n      onDrag: this.dragOver,\n      onPress: this.dragStart\n    }, React.createElement(\"div\", {\n      className: \"k-slider-track-wrap\",\n      style: __assign({\n        flexGrow: 1,\n        position: 'relative',\n        touchAction: 'none'\n      }, trackStyles)\n    }, this.props.children && React.createElement(\"ul\", {\n      className: \"k-reset k-slider-items\",\n      style: __assign({\n        margin: 0\n      }, sliderItemsStyle)\n    }, React.Children.map(this.props.children, function (child) {\n      return child && React.cloneElement(child, {\n        position: 100 * (child.props.position - _this.props.min) / (_this.props.max - _this.props.min),\n        vertical: _this.props.vertical\n      }, child.props.children);\n    })), React.createElement(\"div\", {\n      className: \"k-slider-track\",\n      style: this.props.vertical ? {\n        bottom: 0,\n        height: '100%'\n      } : {\n        left: 0,\n        width: '100%'\n      },\n      ref: function (el) {\n        return _this._sliderTrack = el;\n      }\n    }, React.createElement(\"div\", {\n      className: \"k-slider-selection\",\n      style: this.props.vertical ? {\n        height: percentValue + '%'\n      } : {\n        width: percentValue + '%'\n      }\n    }), React.createElement(\"a\", {\n      className: \"k-draghandle\",\n      title: lS.toLanguageString(sliderDragTitle, messages[sliderDragTitle]),\n      style: this.props.vertical ? {\n        bottom: 'calc(' + percentValue + '% - 8px)',\n        zIndex: 1\n      } : {\n        left: 'calc(' + percentValue + '% - 8px)',\n        zIndex: 1\n      }\n    })))))));\n  };\n  /**\n   * @hidden\n   */\n\n\n  Slider.prototype.focus = function () {\n    if (this._element) {\n      this._element.focus();\n    }\n  };\n\n  Object.defineProperty(Slider.prototype, \"sliderTrack\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._sliderTrack;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Slider.prototype.change = function (e, value) {\n    value = Math.min(Math.max(value, this.props.min), this.props.max);\n    this.setState({\n      value: value\n    });\n    dispatchEvent(this.props.onChange, e, this, {\n      value: value\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Slider.propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    value: PropTypes.number,\n    vertical: PropTypes.bool // TODO: validation when buttons is set to true, but no step is provided\n\n  };\n  return Slider;\n}(React.Component);\n\nexport { Slider };\nregisterForLocalization(Slider);","map":null,"metadata":{},"sourceType":"module"}