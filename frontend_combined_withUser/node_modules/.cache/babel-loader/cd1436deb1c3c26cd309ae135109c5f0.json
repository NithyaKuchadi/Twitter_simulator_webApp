{"ast":null,"code":"var _jsxFileName = \"/Users/junlanlu/Documents/CMPE 273/Group_Project/Twitter_simulator_webApp/frontend_combined_withUser/src/components/Messages/ComposeMessage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postMessage } from '../../redux/actions/message_actions';\nimport { Redirect } from 'react-router';\n\nclass ComposeMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.saveMessage = async event => {\n      event.preventDefault();\n      const formData = new FormData(event.target);\n      let data = {\n        \"to\": formData.get('to'),\n        \"from\": formData.get('from'),\n        \"message\": formData.get('msg')\n      };\n      console.log(\"in save message before requesting\");\n      this.props.postMessage(data);\n      this.inputElement.click();\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    let redirectVar = null;\n\n    if (!localStorage.getItem('cookie2')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/TwitterHome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n\n    var fromEmail = null;\n    fromEmail = localStorage.getItem('cookie2');\n    const value = this.state.value;\n    const inputProps = {\n      value,\n      onChange: this.onChange,\n      className: \"form-control\",\n      required: \"required\",\n      name: \"to\"\n    };\n    return React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"composeMessage\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"composeMessageLabel\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"composeMessageLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"New Message\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      ref: input => this.inputElement = input,\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.saveMessage,\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"from\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"From:\"), React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"from\",\n      value: fromEmail,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"to\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"To:\"), React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"to\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"mesg\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Message:\"), React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"msg\",\n      name: \"msg\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"modal-footer form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Send Message\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  emailListStore: state.inbox.emailList\n});\n\nexport default connect(mapStateToProps, {\n  postMessage\n})(ComposeMessage);","map":{"version":3,"sources":["/Users/junlanlu/Documents/CMPE 273/Group_Project/Twitter_simulator_webApp/frontend_combined_withUser/src/components/Messages/ComposeMessage.js"],"names":["React","Component","connect","postMessage","Redirect","ComposeMessage","constructor","props","onChange","event","newValue","setState","value","saveMessage","preventDefault","formData","FormData","target","data","get","console","log","inputElement","click","state","render","redirectVar","localStorage","getItem","fromEmail","inputProps","className","required","name","input","mapStateToProps","emailListStore","inbox","emailList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {  postMessage } from '../../redux/actions/message_actions';\nimport {Redirect} from 'react-router';\nclass ComposeMessage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        }\n    }\n    onChange = (event, { newValue }) => {\n        \n        this.setState({\n            value: newValue\n        });\n    };\n\n    saveMessage = async (event) => {\n        event.preventDefault();\n        const formData = new FormData(event.target);\n       let data = { \"to\": formData.get('to'), \n                     \"from\": formData.get('from'), \n                     \"message\": formData.get('msg')\n                    };\n                    console.log(\"in save message before requesting\");\n        this.props.postMessage(data);\n        this.inputElement.click();\n        \n    }\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem('cookie2')) {\n            redirectVar = <Redirect to=\"/TwitterHome\" />;\n        } \n\n        var fromEmail = null;\n        fromEmail = localStorage.getItem('cookie2');\n\n        const { value } = this.state;\n        const inputProps = {\n            value,\n            onChange: this.onChange,\n            className: \"form-control\",\n            required:\"required\",\n            name:\"to\"\n        };\n      return (\n            <div className=\"modal fade\" id=\"composeMessage\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"composeMessageLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            {redirectVar}\n                            <h5 className=\"modal-title\" id=\"composeMessageLabel\">New Message</h5>\n                            <button type=\"button\" className=\"close\" ref={input => this.inputElement = input} data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form onSubmit={this.saveMessage} method=\"post\">\n                                <div className=\"form-group row\">\n                                    <label htmlFor=\"from\" className=\"col-sm-2 col-form-label\">From:</label>\n                                    <div className=\"col-sm-7\">\n                                        <input type=\"text\" className=\"form-control\" name=\"from\" value={fromEmail} readOnly />\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label htmlFor=\"to\" className=\"col-sm-2 col-form-label\">To:</label>\n                                    <div className=\"col-sm-7\">\n                                    <input type=\"text\" className=\"form-control\" name=\"to\"  />\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label htmlFor=\"mesg\" className=\"col-sm-2 col-form-label\">Message:</label>\n                                    <div className=\"col-sm-7\">\n                                        <textarea className=\"form-control\" id=\"msg\" name=\"msg\" rows=\"3\"></textarea>\n                                    </div>\n                                </div>\n                                <div className=\"modal-footer form-group\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">Send Message</button>\n                                </div>\n\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    emailListStore : state.inbox.emailList\n});\n\nexport default connect(mapStateToProps, {  postMessage })(ComposeMessage);"]},"metadata":{},"sourceType":"module"}