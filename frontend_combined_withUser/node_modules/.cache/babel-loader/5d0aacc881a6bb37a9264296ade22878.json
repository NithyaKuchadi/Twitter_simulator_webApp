{"ast":null,"code":"import { NEW_MESSAGE, INBOX_MESSAGES } from './action-types';\nimport axios from 'axios';\nimport { rooturl } from '../config/settings';\nexport const postMessage = data => async dispatch => {\n  console.log(\"IN POSTMESSAGE \");\n  let token = localStorage.getItem('token');\n  var config = {\n    headers: {\n      'Authorization': \"bearer \" + token,\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.defaults.withCredentials = true;\n  await axios.post('http://' + rooturl + ':5000/newmessage', data, config).then(async response => {\n    if (response.status === 200) {\n      dispatch({\n        type: NEW_MESSAGE,\n        payload: response.data\n      });\n    }\n  });\n};\nexport const getInboxMessages = email1 => async dispatch => {\n  console.log(\"IN  GETINBOXMESSAGES   \", email1);\n  let token = localStorage.getItem('token');\n  var config = {\n    headers: {\n      'Authorization': \"bearer \" + token,\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.defaults.withCredentials = true;\n  let email = {\n    \"email\": email1\n  };\n  await axios.post('http://' + rooturl + ':5000/inbox/messages', email, config).then(async response => {\n    if (response.status === 200) {\n      console.log(\"IN RESPONSE   \" + response.data);\n      dispatch({\n        type: INBOX_MESSAGES,\n        payload: response.data\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Users/junlanlu/Documents/CMPE 273/Group_Project/Twitter_simulator_webApp/frontend_combined_withUser/src/redux/actions/message_actions.js"],"names":["NEW_MESSAGE","INBOX_MESSAGES","axios","rooturl","postMessage","data","dispatch","console","log","token","localStorage","getItem","config","headers","defaults","withCredentials","post","then","response","status","type","payload","getInboxMessages","email1","email"],"mappings":"AAAA,SAAUA,WAAV,EAAuBC,cAAvB,QAA6C,gBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,MAAIC,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAE;AACL,uBAAiB,YAAUJ,KADtB;AAEL,sBAAgB;AAFX;AADA,GAAb;AAMAP,EAAAA,KAAK,CAACY,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,QAAMb,KAAK,CAACc,IAAN,CAAW,YAAUb,OAAV,GAAkB,kBAA7B,EAAgDE,IAAhD,EAAqDO,MAArD,EACLK,IADK,CACA,MAAOC,QAAP,IAAoB;AACtB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBb,MAAAA,QAAQ,CAAC;AACLc,QAAAA,IAAI,EAAEpB,WADD;AAELqB,QAAAA,OAAO,EAAEH,QAAQ,CAACb;AAFb,OAAD,CAAR;AAIH;AACJ,GARK,CAAN;AAUH,CApBM;AAqBP,OAAO,MAAMiB,gBAAgB,GAAIC,MAAD,IAAY,MAAOjB,QAAP,IAAoB;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCe,MAAtC;AACA,MAAId,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,MAAIC,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAE;AACL,uBAAiB,YAAUJ,KADtB;AAEL,sBAAgB;AAFX;AADA,GAAb;AAMAP,EAAAA,KAAK,CAACY,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,MAAIS,KAAK,GAAC;AACN,aAAQD;AADF,GAAV;AAGA,QAAMrB,KAAK,CAACc,IAAN,CAAW,YAAUb,OAAV,GAAkB,sBAA7B,EAAoDqB,KAApD,EAA0DZ,MAA1D,EACLK,IADK,CACA,MAAOC,QAAP,IAAoB;AACtB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAiBU,QAAQ,CAACb,IAAtC;AACAC,MAAAA,QAAQ,CAAC;AACLc,QAAAA,IAAI,EAAEnB,cADD;AAELoB,QAAAA,OAAO,EAAEH,QAAQ,CAACb;AAFb,OAAD,CAAR;AAIH;AACJ,GATK,CAAN;AAWH,CAxBM","sourcesContent":["import  { NEW_MESSAGE, INBOX_MESSAGES } from './action-types';\nimport axios from 'axios';\nimport { rooturl } from '../config/settings';\n\nexport const postMessage = (data) => async (dispatch) => {\n    console.log(\"IN POSTMESSAGE \");\n    let token = localStorage.getItem('token');\n    var config = {\n        headers: {\n            'Authorization': \"bearer \"+token,\n            'Content-Type': 'application/json'\n        }\n    };\n    axios.defaults.withCredentials = true;\n    await axios.post('http://'+rooturl+':5000/newmessage',data,config)\n    .then(async (response) => {\n        if (response.status === 200) {\n            dispatch({\n                type: NEW_MESSAGE,\n                payload: response.data\n            });\n        }\n    }\n    )\n}\nexport const getInboxMessages = (email1) => async (dispatch) => {\n    console.log(\"IN  GETINBOXMESSAGES   \",email1);\n    let token = localStorage.getItem('token');\n    var config = {\n        headers: {\n            'Authorization': \"bearer \"+token,\n            'Content-Type': 'application/json'\n        }\n    };\n    axios.defaults.withCredentials = true;\n    let email={\n        \"email\":email1\n    }\n    await axios.post('http://'+rooturl+':5000/inbox/messages',email,config)\n    .then(async (response) => {\n        if (response.status === 200) {\n            console.log(\"IN RESPONSE   \"+response.data);\n            dispatch({\n                type: INBOX_MESSAGES,\n                payload: response.data\n            });\n        }\n    }\n    ) \n}"]},"metadata":{},"sourceType":"module"}