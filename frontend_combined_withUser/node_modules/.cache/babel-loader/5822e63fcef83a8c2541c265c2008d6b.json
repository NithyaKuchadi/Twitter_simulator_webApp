{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { windowStage } from './StageEnum';\n/**\n * @hidden\n */\n\nvar WindowTitleBarComponent = function (_a) {\n  var children = _a.children,\n      onCloseButtonClick = _a.onCloseButtonClick,\n      onMinimizeButtonClick = _a.onMinimizeButtonClick,\n      onFullScreenButtonClick = _a.onFullScreenButtonClick,\n      onRestoreButtonClick = _a.onRestoreButtonClick,\n      onDoubleClick = _a.onDoubleClick,\n      stage = _a.stage,\n      forwardedRef = _a.forwardedRef;\n  return React.createElement(\"div\", {\n    className: \"k-window-titlebar k-dialog-titlebar k-header\",\n    style: {\n      touchAction: 'none'\n    },\n    ref: forwardedRef,\n    onDoubleClick: onDoubleClick\n  }, React.createElement(\"div\", {\n    className: \"k-window-title\"\n  }, children ? children : ''), stage === windowStage.DEFAULT && React.createElement(\"button\", {\n    className: \"k-button-icon k-button k-bare\",\n    onClick: onMinimizeButtonClick\n  }, React.createElement(\"span\", {\n    className: \"k-icon k-i-window-minimize\",\n    role: \"presentation\"\n  })), stage === windowStage.DEFAULT && React.createElement(\"button\", {\n    className: \"k-button-icon k-button k-bare\",\n    onClick: onFullScreenButtonClick\n  }, React.createElement(\"span\", {\n    className: \"k-icon k-i-window-maximize\",\n    role: \"presentation\"\n  })), stage !== windowStage.DEFAULT && React.createElement(\"button\", {\n    className: \"k-button-icon k-button k-bare\",\n    onClick: onRestoreButtonClick\n  }, React.createElement(\"span\", {\n    className: \"k-icon k-i-window-restore\",\n    role: \"presentation\"\n  })), React.createElement(\"button\", {\n    className: \"k-button-icon k-button k-bare\",\n    onClick: onCloseButtonClick\n  }, React.createElement(\"span\", {\n    className: \"k-icon k-i-close\",\n    role: \"presentation\"\n  })));\n};\n/**\n * @hidden\n */\n\n\nexport var WindowTitleBar = React.forwardRef(function (props, ref) {\n  return React.createElement(WindowTitleBarComponent, __assign({}, props, {\n    forwardedRef: ref\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}