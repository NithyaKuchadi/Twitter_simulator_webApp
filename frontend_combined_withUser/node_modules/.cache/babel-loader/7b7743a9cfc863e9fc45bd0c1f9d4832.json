{"ast":null,"code":"import _defineProperty from \"/Users/junlanlu/Documents/CMPE 273/Group_Project/Twitter_simulator_webApp/frontend_combined_withUser/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from \"../actions/action-types\";\nconst initialState = {\n  feeds: {\n    docs: [],\n    hasMore: true\n  },\n  error: \"\",\n  message: \"\"\n};\nexport default function profileReducer(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_FEEDS_SUCCESS:\n      debugger;\n      console.log(\"GET_FEEDS_SUCCESS\");\n\n      var feedResult = _objectSpread({}, state.feeds);\n\n      feedResult.docs = feedResult.docs.concat(action.result.docs);\n      feedResult.hasMore = action.result.hasMore;\n      return Object.assign({}, state, {\n        error: \"\",\n        message: \"GET_FEEDS_SUCCESS\",\n        feeds: feedResult\n      });\n\n    case types.GET_FEEDS_FAILURE:\n      console.log(\"GET_FEEDS_FAILURE\");\n      return Object.assign({}, state, {\n        error: \"GET_FEEDS_FAILURE\",\n        message: \"\",\n        feeds: {\n          docs: [],\n          hasMore: true\n        }\n      });\n\n    case types.LIKE_TWEET_SUCCESS:\n      debugger;\n      console.log(\"LIKE_TWEET_SUCCESS\");\n\n      var feedResult = _objectSpread({}, state.feeds);\n\n      var likeCount = feedResult.docs.filter(function (obj) {\n        return obj._id === action.result._id;\n      })[0].likeCount++;\n      feedResult.docs.filter(function (obj) {\n        return obj._id === action.result._id;\n      })[0].likes = action.result.likes;\n      return Object.assign({}, state, {\n        error: \"\",\n        message: \"LIKE_TWEET_SUCCESS\",\n        feeds: feedResult\n      });\n\n    case types.UNLIKE_TWEET_SUCCESS:\n      debugger;\n      console.log(\"UNLIKE_TWEET_SUCCESS\");\n\n      var feedResult = _objectSpread({}, state.feeds);\n\n      var likeCount = feedResult.docs.filter(function (obj) {\n        return obj._id === action.result._id;\n      })[0].likeCount--;\n      feedResult.docs.filter(function (obj) {\n        return obj._id === action.result._id;\n      })[0].likes = action.result.likes;\n      return Object.assign({}, state, {\n        error: \"\",\n        message: \"UNLIKE_TWEET_SUCCESS\",\n        feeds: feedResult\n      });\n\n    case types.RETWEET_SUCCESS:\n      debugger;\n      console.log(\"RETWEET_SUCCESS\");\n\n      var feedResult = _objectSpread({}, state.feeds);\n\n      feedResult.docs.filter(function (obj) {\n        return obj._id === action.result._id;\n      })[0].reTweetCount++;\n      return Object.assign({}, state, {\n        error: \"\",\n        message: \"RETWEET_SUCCESS\",\n        feeds: feedResult\n      });\n\n    case types.REPLYTO_TWEET_SUCCESS:\n      console.log(\"REPLYTO_TWEET_SUCCESS\");\n\n      var feedResult = _objectSpread({}, state.feeds);\n\n      feedResult.docs.filter(function (obj) {\n        return obj._id === action.result.tweetId;\n      })[0].comments.push(action.result);\n      return Object.assign({}, state, {\n        error: \"\",\n        message: \"REPLYTO_TWEET_SUCCESS\",\n        feeds: feedResult\n      });\n\n    case types.CLEAR_FEEDS:\n      return Object.assign({}, state, {\n        error: \"\",\n        message: \"\",\n        feeds: {\n          docs: [],\n          hasMore: true\n        }\n      });\n\n    case types.LOGOUT_SUCCESS:\n      return Object.assign({}, state, {\n        error: \"\",\n        message: \"\",\n        feeds: {\n          docs: [],\n          hasMore: true\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/junlanlu/Documents/CMPE 273/Group_Project/Twitter_simulator_webApp/frontend_combined_withUser/src/redux/reducers/feeds-reducer.js"],"names":["types","initialState","feeds","docs","hasMore","error","message","profileReducer","state","action","type","GET_FEEDS_SUCCESS","console","log","feedResult","concat","result","Object","assign","GET_FEEDS_FAILURE","LIKE_TWEET_SUCCESS","likeCount","filter","obj","_id","likes","UNLIKE_TWEET_SUCCESS","RETWEET_SUCCESS","reTweetCount","REPLYTO_TWEET_SUCCESS","tweetId","comments","push","CLEAR_FEEDS","LOGOUT_SUCCESS"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAC,EADF;AAEHC,IAAAA,OAAO,EAAE;AAFN,GADY;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;AASA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGP,YAAhC,EAA8CQ,MAA9C,EAAsD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAK,CAACW,iBAAX;AACI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,UAAIC,UAAU,qBAAON,KAAK,CAACN,KAAb,CAAd;;AACAY,MAAAA,UAAU,CAACX,IAAX,GAAkBW,UAAU,CAACX,IAAX,CAAgBY,MAAhB,CAAuBN,MAAM,CAACO,MAAP,CAAcb,IAArC,CAAlB;AACAW,MAAAA,UAAU,CAACV,OAAX,GAAqBK,MAAM,CAACO,MAAP,CAAcZ,OAAnC;AACA,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BH,QAAAA,KAAK,EAAE,EADqB;AAE5BC,QAAAA,OAAO,EAAE,mBAFmB;AAG5BJ,QAAAA,KAAK,EAAEY;AAHqB,OAAzB,CAAP;;AAKJ,SAAKd,KAAK,CAACmB,iBAAX;AACIP,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,aAAOI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BH,QAAAA,KAAK,EAAE,mBADqB;AAE5BC,QAAAA,OAAO,EAAE,EAFmB;AAG5BJ,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAC,EADF;AAEHC,UAAAA,OAAO,EAAE;AAFN;AAHqB,OAAzB,CAAP;;AAQJ,SAAKJ,KAAK,CAACoB,kBAAX;AACI;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,UAAIC,UAAU,qBAAON,KAAK,CAACN,KAAb,CAAd;;AACA,UAAImB,SAAS,GAAGP,UAAU,CAACX,IAAX,CAAgBmB,MAAhB,CAAuB,UAAUC,GAAV,EAAgB;AACnD,eAAOA,GAAG,CAACC,GAAJ,KAAYf,MAAM,CAACO,MAAP,CAAcQ,GAAjC;AACH,OAFe,EAEb,CAFa,EAEVH,SAFU,EAAhB;AAGAP,MAAAA,UAAU,CAACX,IAAX,CAAgBmB,MAAhB,CAAuB,UAAUC,GAAV,EAAgB;AACnC,eAAOA,GAAG,CAACC,GAAJ,KAAYf,MAAM,CAACO,MAAP,CAAcQ,GAAjC;AACH,OAFD,EAEG,CAFH,EAEMC,KAFN,GAEchB,MAAM,CAACO,MAAP,CAAcS,KAF5B;AAGA,aAAOR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BH,QAAAA,KAAK,EAAE,EADqB;AAE5BC,QAAAA,OAAO,EAAE,oBAFmB;AAG5BJ,QAAAA,KAAK,EAAEY;AAHqB,OAAzB,CAAP;;AAKJ,SAAKd,KAAK,CAAC0B,oBAAX;AACQ;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,UAAIC,UAAU,qBAAON,KAAK,CAACN,KAAb,CAAd;;AACA,UAAImB,SAAS,GAAGP,UAAU,CAACX,IAAX,CAAgBmB,MAAhB,CAAuB,UAAUC,GAAV,EAAgB;AACnD,eAAOA,GAAG,CAACC,GAAJ,KAAYf,MAAM,CAACO,MAAP,CAAcQ,GAAjC;AACH,OAFe,EAEb,CAFa,EAEVH,SAFU,EAAhB;AAGAP,MAAAA,UAAU,CAACX,IAAX,CAAgBmB,MAAhB,CAAuB,UAAUC,GAAV,EAAgB;AACnC,eAAOA,GAAG,CAACC,GAAJ,KAAYf,MAAM,CAACO,MAAP,CAAcQ,GAAjC;AACH,OAFD,EAEG,CAFH,EAEMC,KAFN,GAEchB,MAAM,CAACO,MAAP,CAAcS,KAF5B;AAGA,aAAOR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BH,QAAAA,KAAK,EAAE,EADqB;AAE5BC,QAAAA,OAAO,EAAE,sBAFmB;AAG5BJ,QAAAA,KAAK,EAAEY;AAHqB,OAAzB,CAAP;;AAKR,SAAKd,KAAK,CAAC2B,eAAX;AACQ;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,UAAIC,UAAU,qBAAON,KAAK,CAACN,KAAb,CAAd;;AACAY,MAAAA,UAAU,CAACX,IAAX,CAAgBmB,MAAhB,CAAuB,UAAUC,GAAV,EAAgB;AACnC,eAAOA,GAAG,CAACC,GAAJ,KAAYf,MAAM,CAACO,MAAP,CAAcQ,GAAjC;AACH,OAFD,EAEG,CAFH,EAEMI,YAFN;AAGA,aAAOX,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BH,QAAAA,KAAK,EAAE,EADqB;AAE5BC,QAAAA,OAAO,EAAE,iBAFmB;AAG5BJ,QAAAA,KAAK,EAAEY;AAHqB,OAAzB,CAAP;;AAKR,SAAKd,KAAK,CAAC6B,qBAAX;AACQjB,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,UAAIC,UAAU,qBAAON,KAAK,CAACN,KAAb,CAAd;;AACAY,MAAAA,UAAU,CAACX,IAAX,CAAgBmB,MAAhB,CAAuB,UAAUC,GAAV,EAAgB;AACnC,eAAOA,GAAG,CAACC,GAAJ,KAAYf,MAAM,CAACO,MAAP,CAAcc,OAAjC;AACH,OAFD,EAEG,CAFH,EAEMC,QAFN,CAEeC,IAFf,CAEoBvB,MAAM,CAACO,MAF3B;AAGA,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BH,QAAAA,KAAK,EAAE,EADqB;AAE5BC,QAAAA,OAAO,EAAE,uBAFmB;AAG5BJ,QAAAA,KAAK,EAAEY;AAHqB,OAAzB,CAAP;;AAKR,SAAKd,KAAK,CAACiC,WAAX;AACQ,aAAOhB,MAAM,CAACC,MAAP,CACH,EADG,EACCV,KADD,EACQ;AACXH,QAAAA,KAAK,EAAE,EADI;AAEXC,QAAAA,OAAO,EAAE,EAFE;AAGXJ,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAC,EADF;AAEHC,UAAAA,OAAO,EAAE;AAFN;AAHI,OADR,CAAP;;AAUR,SAAKJ,KAAK,CAACkC,cAAX;AACI,aAAOjB,MAAM,CAACC,MAAP,CACH,EADG,EACCV,KADD,EACQ;AACXH,QAAAA,KAAK,EAAE,EADI;AAEXC,QAAAA,OAAO,EAAE,EAFE;AAGXJ,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAC,EADF;AAEHC,UAAAA,OAAO,EAAE;AAFN;AAHI,OADR,CAAP;;AAUJ;AACI,aAAOI,KAAP;AAlGR;AAoGH","sourcesContent":["import * as types from \"../actions/action-types\";\n\nconst initialState = {\n  feeds: {\n      docs:[],\n      hasMore: true\n  },\n  error: \"\",\n  message: \"\"\n};\n\nexport default function profileReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.GET_FEEDS_SUCCESS:\n            debugger;\n            console.log(\"GET_FEEDS_SUCCESS\");\n            var feedResult = {...state.feeds};\n            feedResult.docs = feedResult.docs.concat(action.result.docs);\n            feedResult.hasMore = action.result.hasMore;\n            return Object.assign({}, state, {\n                error: \"\",\n                message: \"GET_FEEDS_SUCCESS\",\n                feeds: feedResult\n            });\n        case types.GET_FEEDS_FAILURE:\n            console.log(\"GET_FEEDS_FAILURE\");\n            return Object.assign({}, state, {\n                error: \"GET_FEEDS_FAILURE\",\n                message: \"\",\n                feeds: {\n                    docs:[],\n                    hasMore: true\n                    }\n            });\n        case types.LIKE_TWEET_SUCCESS:\n            debugger;\n            console.log(\"LIKE_TWEET_SUCCESS\");\n            var feedResult = {...state.feeds};\n            var likeCount = feedResult.docs.filter(function( obj ) {\n                return obj._id === action.result._id;\n            })[0].likeCount++;\n            feedResult.docs.filter(function( obj ) {\n                return obj._id === action.result._id;\n            })[0].likes = action.result.likes;\n            return Object.assign({}, state, {\n                error: \"\",\n                message: \"LIKE_TWEET_SUCCESS\",\n                feeds: feedResult\n            });\n        case types.UNLIKE_TWEET_SUCCESS:\n                debugger;\n                console.log(\"UNLIKE_TWEET_SUCCESS\");\n                var feedResult = {...state.feeds};\n                var likeCount = feedResult.docs.filter(function( obj ) {\n                    return obj._id === action.result._id;\n                })[0].likeCount--;\n                feedResult.docs.filter(function( obj ) {\n                    return obj._id === action.result._id;\n                })[0].likes = action.result.likes;\n                return Object.assign({}, state, {\n                    error: \"\",\n                    message: \"UNLIKE_TWEET_SUCCESS\",\n                    feeds: feedResult\n                });\n        case types.RETWEET_SUCCESS:\n                debugger;\n                console.log(\"RETWEET_SUCCESS\");\n                var feedResult = {...state.feeds};\n                feedResult.docs.filter(function( obj ) {\n                    return obj._id === action.result._id;\n                })[0].reTweetCount++;\n                return Object.assign({}, state, {\n                    error: \"\",\n                    message: \"RETWEET_SUCCESS\",\n                    feeds: feedResult\n                });\n        case types.REPLYTO_TWEET_SUCCESS:\n                console.log(\"REPLYTO_TWEET_SUCCESS\");\n                var feedResult = {...state.feeds};\n                feedResult.docs.filter(function( obj ) {\n                    return obj._id === action.result.tweetId;\n                })[0].comments.push(action.result);\n                return Object.assign({}, state, {\n                    error: \"\",\n                    message: \"REPLYTO_TWEET_SUCCESS\",\n                    feeds: feedResult\n                });\n        case types.CLEAR_FEEDS:\n                return Object.assign(\n                    {}, state, {\n                    error: \"\",\n                    message: \"\",\n                    feeds: {\n                        docs:[],\n                        hasMore: true\n                        }\n                    }\n                );\n        case types.LOGOUT_SUCCESS:\n            return Object.assign(\n                {}, state, {\n                error: \"\",\n                message: \"\",\n                feeds: {\n                    docs:[],\n                    hasMore: true\n                    }\n                }\n            );\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}