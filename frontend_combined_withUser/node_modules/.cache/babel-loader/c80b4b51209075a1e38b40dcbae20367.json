{"ast":null,"code":"import { IMAGE_UPLOAD, IMAGE_DOWNLOAD } from './action-types';\nimport axios from 'axios';\nimport { rooturl } from '../config/settings';\nexport const imageDownload = image1 => async dispatch => {\n  let image = {\n    image: image1\n  };\n  let token = localStorage.getItem('token');\n  var config = {\n    headers: {\n      'Authorization': \"bearer \" + token,\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.defaults.withCredentials = true;\n  await axios.post('http://' + rooturl + ':5000/download-file/', image, config).then(async response => {\n    dispatch({\n      type: IMAGE_DOWNLOAD,\n      imagePreviewresponse: response.data\n    });\n  });\n};\nexport const imageUpload = data => async dispatch => {\n  axios.defaults.withCredentials = true;\n  await axios.post('http://' + rooturl + ':5000/image-upload', data).then(async response => {\n    dispatch({\n      type: IMAGE_UPLOAD,\n      imageupload_url: response.data\n    });\n  });\n};","map":{"version":3,"sources":["/Users/junlanlu/Documents/CMPE 273/Group_Project/Twitter_simulator_webApp/frontend_combined_withUser/src/redux/actions/image_actions.js"],"names":["IMAGE_UPLOAD","IMAGE_DOWNLOAD","axios","rooturl","imageDownload","image1","dispatch","image","token","localStorage","getItem","config","headers","defaults","withCredentials","post","then","response","type","imagePreviewresponse","data","imageUpload","imageupload_url"],"mappings":"AAAA,SAAUA,YAAV,EAAwBC,cAAxB,QAA8C,gBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC3D,MAAIC,KAAK,GAAC;AACNA,IAAAA,KAAK,EAACF;AADA,GAAV;AAGE,MAAIG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,MAAIC,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAE;AACL,uBAAiB,YAAUJ,KADtB;AAEL,sBAAgB;AAFX;AADA,GAAb;AAMAN,EAAAA,KAAK,CAACW,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,QAAMZ,KAAK,CAACa,IAAN,CAAW,YAAUZ,OAAV,GAAkB,sBAA7B,EAAqDI,KAArD,EAA2DI,MAA3D,EACDK,IADC,CACI,MAAOC,QAAP,IAAoB;AACvBX,IAAAA,QAAQ,CAAC;AACJY,MAAAA,IAAI,EAAEjB,cADF;AAEJkB,MAAAA,oBAAoB,EAAEF,QAAQ,CAACG;AAF3B,KAAD,CAAR;AAIF,GANC,CAAN;AAOH,CAnBM;AAoBP,OAAO,MAAMC,WAAW,GAAID,IAAD,IAAU,MAAOd,QAAP,IAAoB;AAEtDJ,EAAAA,KAAK,CAACW,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,QAAMZ,KAAK,CAACa,IAAN,CAAW,YAAUZ,OAAV,GAAkB,oBAA7B,EAAmDiB,IAAnD,EACLJ,IADK,CACA,MAAOC,QAAP,IAAoB;AACvBX,IAAAA,QAAQ,CAAC;AACCY,MAAAA,IAAI,EAAElB,YADP;AAECsB,MAAAA,eAAe,EAAGL,QAAQ,CAACG;AAF5B,KAAD,CAAR;AAIG,GANA,CAAN;AAQF,CAXM","sourcesContent":["import  { IMAGE_UPLOAD, IMAGE_DOWNLOAD } from './action-types';\nimport axios from 'axios';\nimport { rooturl } from '../config/settings';\n\nexport const imageDownload = (image1) => async (dispatch) => {\n  let image={\n      image:image1\n  }\n    let token = localStorage.getItem('token');\n    var config = {\n        headers: {\n            'Authorization': \"bearer \"+token,\n            'Content-Type': 'application/json'\n        }\n    };  \n    axios.defaults.withCredentials = true;\n    await axios.post('http://'+rooturl+':5000/download-file/', image,config)\n        .then(async (response) => {\n           dispatch({\n                type: IMAGE_DOWNLOAD,\n                imagePreviewresponse: response.data\n            });\n        })\n}\nexport const imageUpload = (data) => async (dispatch) => {\n \n   axios.defaults.withCredentials = true;\n   await axios.post('http://'+rooturl+':5000/image-upload', data) \n   .then(async (response) => {\n      dispatch({\n                type: IMAGE_UPLOAD,\n                imageupload_url : response.data\n            });\n        })\n\n}\n"]},"metadata":{},"sourceType":"module"}