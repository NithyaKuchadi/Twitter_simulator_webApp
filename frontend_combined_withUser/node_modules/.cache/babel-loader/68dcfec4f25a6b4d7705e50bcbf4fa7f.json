{"ast":null,"code":"var cache = {};\n/**\n * @hidden\n */\n\nexport function cacheHsva(componentGuid, value, hsva) {\n  cache[componentGuid] = {\n    value: value,\n    hsva: hsva\n  };\n}\n/**\n * @hidden\n */\n\nexport function cacheRgba(componentGuid, value, rgba) {\n  cache[componentGuid] = {\n    value: value,\n    rgba: rgba\n  };\n}\n/**\n * @hidden\n */\n\nexport function cacheHex(componentGuid, value, hex) {\n  cache[componentGuid] = {\n    value: value,\n    hex: hex\n  };\n}\n/**\n * @hidden\n */\n\nexport function removeCachedColor(componentGuid) {\n  delete cache[componentGuid];\n}\n/**\n * @hidden\n */\n\nexport function getCachedHex(componentGuid, value) {\n  if (componentGuid) {\n    var cachedColor = cache[componentGuid];\n    return cachedColor && cachedColor.value === value ? cachedColor.hex : undefined;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @hidden\n */\n\nexport function getCachedHsva(componentGuid, value) {\n  if (componentGuid) {\n    var cachedColor = cache[componentGuid];\n    return cachedColor && cachedColor.value === value ? cachedColor.hsva : undefined;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @hidden\n */\n\nexport function getCachedRgba(componentGuid, value) {\n  if (componentGuid) {\n    var cachedColor = cache[componentGuid];\n    return cachedColor && cachedColor.value === value ? cachedColor.rgba : undefined;\n  } else {\n    return undefined;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}